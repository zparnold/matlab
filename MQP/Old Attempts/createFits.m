function [fitresult, gof] = createFits(newTime, newX)
%CREATEFITS(NEWTIME,NEWX)
%  Create fits.
%
%  Data for 'GaitEstimateSpline' fit:
%      X Input : newTime
%      Y Output: newX
%  Data for 'GaitEstimateSineSum' fit:
%      X Input : newTime
%      Y Output: newX
%  Data for 'GaitEstimateFourier' fit:
%      X Input : newTime
%      Y Output: newX
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Nov-2014 10:27:15

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'GaitEstimateSpline'.
[xData, yData] = prepareCurveData( newTime, newX );

% Set up fittype and options.
ft = fittype( 'smoothingspline' );
opts = fitoptions( ft );
opts.SmoothingParam = 0.9998826997479;

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'GaitEstimateSpline' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'newX vs. newTime', 'GaitEstimateSpline', 'Location', 'NorthEast' );
% Label axes
xlabel( 'newTime' );
ylabel( 'newX' );
grid on

%% Fit: 'GaitEstimateSineSum'.
[xData, yData] = prepareCurveData( newTime, newX );

% Set up fittype and options.
ft = fittype( 'sin8' );
opts = fitoptions( ft );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [0.749715844555627 0.314253541421406 0.0291388437754053 0.254220513842044 21.9977478994984 -0.131063720452578 0.312007274446495 0.628507082842811 -1.50873612332044 0.227515680580796 27.6543116450837 1.84441398660793 0.229604439456872 43.9954957989968 2.08953247989198 0.220907770939872 5.6565637455853 2.92615872657877 0.227849360012663 38.3389320534115 1.35591722971163 0.129609334157356 33.310875390669 -2.3626626554926];
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'GaitEstimateSineSum' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'newX vs. newTime', 'GaitEstimateSineSum', 'Location', 'NorthEast' );
% Label axes
xlabel( 'newTime' );
ylabel( 'newX' );
grid on

%% Fit: 'GaitEstimateFourier'.
[xData, yData] = prepareCurveData( newTime, newX );

% Set up fittype and options.
ft = fittype( 'fourier8' );
opts = fitoptions( ft );
opts.Display = 'Off';
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf];
opts.StartPoint = [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5.4994369748746];
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'GaitEstimateFourier' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'newX vs. newTime', 'GaitEstimateFourier', 'Location', 'NorthEast' );
% Label axes
xlabel( 'newTime' );
ylabel( 'newX' );
grid on



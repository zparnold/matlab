function [fitresult, gof] = Proj2Part1GeneratedCode(temp, dc)
%CREATEFITS(TEMP,DC)
%  Create fits.
%
%  Data for 'Linear Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Data for 'Quadratic Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Data for 'Cubic Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Data for '4th Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Data for '5th Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Data for '6th Approximation' fit:
%      X Input : temp
%      Y Output: dc
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 18-Nov-2014 20:08:50

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 6, 1 );
gof = struct( 'sse', cell( 6, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Linear Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly1' );

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Linear Approximation' );
h = plot( fitresult{1}, xData, yData );
legend( h, 'dc vs. temp', 'Linear Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on

%% Fit: 'Quadratic Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly2' );

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Quadratic Approximation' );
h = plot( fitresult{2}, xData, yData );
legend( h, 'dc vs. temp', 'Quadratic Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on

%% Fit: 'Cubic Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly3' );

% Fit model to data.
[fitresult{3}, gof(3)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', 'Cubic Approximation' );
h = plot( fitresult{3}, xData, yData );
legend( h, 'dc vs. temp', 'Cubic Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on

%% Fit: '4th Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly4' );

% Fit model to data.
[fitresult{4}, gof(4)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', '4th Approximation' );
h = plot( fitresult{4}, xData, yData );
legend( h, 'dc vs. temp', '4th Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on

%% Fit: '5th Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly5' );

% Fit model to data.
[fitresult{5}, gof(5)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', '5th Approximation' );
h = plot( fitresult{5}, xData, yData );
legend( h, 'dc vs. temp', '5th Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on

%% Fit: '6th Approximation'.
[xData, yData] = prepareCurveData( temp, dc );

% Set up fittype and options.
ft = fittype( 'poly6' );

% Fit model to data.
[fitresult{6}, gof(6)] = fit( xData, yData, ft );

% Plot fit with data.
figure( 'Name', '6th Approximation' );
h = plot( fitresult{6}, xData, yData );
legend( h, 'dc vs. temp', '6th Approximation', 'Location', 'NorthEast' );
% Label axes
xlabel( 'temp' );
ylabel( 'dc' );
grid on


